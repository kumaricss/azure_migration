parameters:
  - name: environment
    type: string
  - name: key_vault_name
    type: string
  - name: key_vault_secret_filter
    type: string
  - name: azure_subscription
    type: string
  - name: arm_client_id
    type: string
  - name: arm_subscription_id
    type: string
  - name: arm_tenant_id
    type: string
  - name: backend_resource_group_name
    type: string 
  - name: backend_storage_account_name
    type: string 
  - name: backend_state_key
    type: string
  - name: approval_timeout
    type: number
    default: 60
  - name: fail_on_tfsec
    type: boolean
    default: true

stages:
  - stage: BuildAndRelease${{ parameters.environment }}
    displayName: 'Build and Release ${{ parameters.environment }}'
    variables:
      ARM_CLIENT_ID: ${{ parameters.arm_client_id }}
      ARM_SUBSCRIPTION_ID: ${{ parameters.arm_subscription_id }}
      ARM_TENANT_ID: ${{ parameters.arm_tenant_id }}
    jobs:
      - job: ValidateAndPlan${{ parameters.environment }}
        displayName: 'Validate and Plan ${{ parameters.environment }}'
        steps:
          - template: task/setup.yml
            parameters:
              key_vault_name: ${{ parameters.key_vault_name }}
              secret_filter: ${{ parameters.key_vault_secret_filter }}
          - template: task/init.yml
            parameters:
              azure_subscription: ${{ parameters.azure_subscription }}
              backend_resource_group_name: ${{ parameters.backend_resource_group_name }}
              backend_storage_account_name: ${{ parameters.backend_storage_account_name }}
              backend_state_key: ${{ parameters.backend_state_key }}
          - task: AzurePowerShell@5
            displayName: 'Terraform Validate ${{ parameters.environment }}'
            inputs:
              azureSubscription: ${{ parameters.azure_subscription }}
              failOnStandardError: true`
              ScriptType: 'InlineScript'
              Inline: |
                terraform validate
              azurePowerShellVersion: 'LatestVersion'
          - template: task/plan.yml
            parameters:
              azure_subscription: ${{ parameters.azure_subscription }}
              environment: ${{ parameters.environment }}
      - job: ManualApproval${{ parameters.environment }}
        displayName: "Approve plan for ${{ parameters.environment }}"
        dependsOn: ValidateAndPlan${{ parameters.environment }}
        pool: server
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: ${{ parameters.approval_timeout }}
            inputs:
              instructions: 'Please validate the build configuration and resume'
      - job: TerraformApply${{ parameters.environment }}
        displayName: "Apply changes to ${{ parameters.environment }}"
        dependsOn: ManualApproval${{ parameters.environment }}
        steps:
          - template: task/setup.yml
            parameters:
              key_vault_name: ${{ parameters.key_vault_name }}
              secret_filter: ${{ parameters.key_vault_secret_filter }}
          - template: task/init.yml
            parameters:
              azure_subscription: ${{ parameters.azure_subscription }}
              backend_resource_group_name: ${{ parameters.backend_resource_group_name }}
              backend_storage_account_name: ${{ parameters.backend_storage_account_name }}
              backend_state_key: ${{ parameters.backend_state_key }}
          - template: task/apply.yml
            parameters:
              azure_subscription: ${{ parameters.azure_subscription }}
              environment: ${{ parameters.environment }}
      - template: job/tfsec.yml
        parameters:
          environment: ${{ parameters.environment }}
          fail_on_test_failures: ${{ parameters.fail_on_tfsec }}